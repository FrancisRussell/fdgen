u = Field(name="velocity", rank=1, spatial_stagger_strategy="dimension")
h = Field(name="height", rank=0, spatial_stagger_strategy="none")
dt = NamedLiteral(name="dt", value=10.0)
nu = NamedLiteral(name="nu", value=0.0)
g = NamedLiteral(name="g", value=9.81)
H = NamedLiteral(name="h0", value=5000.0)
hx = NamedLiteral(name="hx", value=50000.0)
hy = NamedLiteral(name="hy", value=50000.0)

VelocityEq = Equation(Dt(u), nu * div(grad(u)) - dot(u, grad(u)) - g * grad(h))
HeightEq = Equation(Dt(h), -div((h + H) * u))
VelocityBC_H = BoundaryCondition(u[0], 0, subdomains=["top_edge", "bottom_edge"])
VelocityBC_V = BoundaryCondition(u[1], 0, subdomains=["left_edge", "right_edge"])
HeightBC = BoundaryCondition(Dn(h), 0)

TimeStep = Solve(name="step", spatial_order=1, temporal_order=3, equations=[VelocityEq, HeightEq], 
  boundary_conditions=[VelocityBC_H, VelocityBC_V, HeightBC], delta_t=dt)

m = Mesh(name="shallow_water", dimension=2, fields=[u, h], solves=[TimeStep], grid_spacing=[hx, hy])
