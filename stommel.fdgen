u = Field(name="u", rank=1, spatial_staggering="dimension")
h = Field(name="h", rank=0)
dt = NamedLiteral(name="dt", value=25.0)
nu = NamedLiteral(name="nu", value=470.23)
g = NamedLiteral(name="g", value=9.81)
f0 = NamedLiteral(name="f0", value=4.46e-5)
beta = NamedLiteral(name="beta", value=2.e-11)
H = NamedLiteral(name="h0", value=500.0)
hx = NamedLiteral(name="hx", value=34800.0)
hy = hx
nx = NamedLiteral(name="nx", value=100)
ny = nx
e = Permutation()

# Zonal wind
tau_expression = [0.12 * (cos(2.0 * pi * (pos[1] / (hy * ny) - 0.5)) + 2.0 * sin(pi * (pos[1] / (hy * ny) - 0.5))) / (999.8 * H), 0]
tau = Field(name="tau", rank=1, initial=tau_expression, spatial_staggering="dimension")

# Beta-plane approximation (variation in Coriolis is linear)
f = f0 + beta * pos[1]


V_Eq = Equation(Dt(u), nu * div(grad(u)) - dot(u, grad(u)) - g * grad(h) + f*dot(e, u) + tau)
H_Eq = Equation(Dt(h), -div((h + H) * u))
V_BC = BoundaryCondition(u, [0, 0])
H_BC = BoundaryCondition(Dn(h), 0)

TimeStep = Solve(name="step", spatial_order=1, temporal_order=3, equations=[V_Eq, H_Eq], 
  boundary_conditions=[V_BC, H_BC], delta_t=dt)

m = Mesh(name="shallow_water", dim=2, fields=[u, h, tau], solves=[TimeStep], spacing=[hx, hx], 
  dimensions=[nx, nx], initial=[("h", 0.0)])

s = Simulation(mesh=m, wanted_fields=[h], num_timesteps=2000, sample_every=20)
